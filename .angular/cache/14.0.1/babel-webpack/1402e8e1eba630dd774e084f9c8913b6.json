{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/brmorales.STFMXC1451/Documents/Angular- course/tema3/libreria/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/users/users.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/roles/roles.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/toolbar\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/forms\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\n\nfunction UserEditComponent_mat_card_5_mat_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const role_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r2.name, \" \");\n  }\n}\n\nfunction UserEditComponent_mat_card_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 4)(1, \"div\")(2, \"mat-form-field\", 5)(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\")(7, \"mat-form-field\", 5)(8, \"mat-label\");\n    i0.ɵɵtext(9, \"Second Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\")(12, \"mat-form-field\", 5)(13, \"mat-label\");\n    i0.ɵɵtext(14, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\")(17, \"mat-form-field\", 5)(18, \"mat-select\", 9);\n    i0.ɵɵtemplate(19, UserEditComponent_mat_card_5_mat_option_19_Template, 2, 2, \"mat-option\", 10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"div\", 11)(21, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function UserEditComponent_mat_card_5_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editData());\n    });\n    i0.ɵɵtext(22, \"Edit User\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(19);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.roles);\n  }\n}\n\nexport class UserEditComponent {\n  constructor(userService, activatedRoute, router, rolesService) {\n    this.userService = userService;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.rolesService = rolesService;\n    this.dataEdit = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      roleId: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      secondLastName: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnInit() {\n    this.id = this.activatedRoute.snapshot.paramMap.get('idCharacter');\n    this.users();\n    this.addRoles();\n  }\n\n  get nameUser() {\n    return this.dataEdit.get('name');\n  }\n\n  get lasNameUser() {\n    return this.dataEdit.get('lastName');\n  }\n\n  get secondNameUser() {\n    return this.dataEdit.get('secondLastName');\n  }\n\n  get roleIdUser() {\n    this.stringRole();\n    return this.dataEdit.get('roleId');\n  }\n\n  stringRole() {\n    if (this.user.roleId === 1) {\n      return this.userRole = 'admin';\n    } else {\n      return this.userRole = 'viewer';\n    }\n  }\n\n  preLoadData() {\n    this.nameUser?.setValue(this.user.name);\n    this.lasNameUser?.setValue(this.user.lastName);\n    this.secondNameUser?.setValue(this.user.secondLastName);\n    this.roleIdUser?.setValue(this.userRole);\n  }\n\n  users() {\n    this.userService.getUser(this.id).subscribe(user => {\n      this.user = user.data[0];\n      this.preLoadData();\n    });\n  }\n\n  addRoles() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield _this.rolesService.getRoles();\n      _this.roles = res.data;\n      console.log(_this.roles);\n    })();\n  }\n\n  editData() {\n    console.log(this.dataEdit);\n    this.userService.putUser(this.dataEdit.value, this.id);\n    this.router.navigate(['/app']);\n  }\n\n}\n\nUserEditComponent.ɵfac = function UserEditComponent_Factory(t) {\n  return new (t || UserEditComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RolesService));\n};\n\nUserEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserEditComponent,\n  selectors: [[\"app-user-edit\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[1, \"container\", \"mt-3\"], [2, \"background-color\", \"#4cff75\"], [3, \"formGroup\", \"submit\"], [\"class\", \"text-center mt-3\", \"fxLayoutAlign\", \"center center\", 4, \"ngIf\"], [\"fxLayoutAlign\", \"center center\", 1, \"text-center\", \"mt-3\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"type\", \"name\"], [\"matInput\", \"\", \"type\", \"secondLastName\", \"formControlName\", \"secondLastName\", \"placeholder\", \"Second Name\"], [\"matInput\", \"\", \"type\", \"lastName\", \"formControlName\", \"lastName\", \"placeholder\", \"Last Name\"], [\"formControlName\", \"roleId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"mx-auto\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [3, \"value\"]],\n  template: function UserEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-toolbar\", 1)(2, \"span\");\n      i0.ɵɵtext(3, \" Edit User \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"submit\", function UserEditComponent_Template_form_submit_4_listener() {\n        return ctx.editData();\n      });\n      i0.ɵɵtemplate(5, UserEditComponent_mat_card_5_Template, 23, 1, \"mat-card\", 3);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.dataEdit);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.MatFormField, i5.MatLabel, i6.MatInput, i7.MatToolbar, i8.MatCard, i9.MatButton, i10.ɵNgNoValidate, i10.DefaultValueAccessor, i10.NgControlStatus, i10.NgControlStatusGroup, i10.FormGroupDirective, i10.FormControlName, i11.MatSelect, i12.MatOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWVkaXQuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":";AAGA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,QAAmD,gBAAnD;;;;;;;;;;;;;;;;;ICiCwBC;IACEA;IACFA;;;;;IAFuCA;IACrCA;IAAAA;;;;;;;;IA7BlBA,oCAA6E,CAA7E,EAA6E,KAA7E,EAA6E,CAA7E,EAA6E,gBAA7E,EAA6E,CAA7E,EAA6E,CAA7E,EAA6E,WAA7E;IAIiBA;IAAIA;IACbA;IAEJA;IAEJA,4BAAK,CAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,CAAL,EAAK,WAAL;IAEmBA;IAAWA;IACtBA;IAEFA;IAENA,6BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,WAAL;IAEmBA;IAASA;IACpBA;IAEFA;IAGFA,6BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,YAAL,EAAK,CAAL;IAIYA;IAGFA;IAIdA,iCAAqB,EAArB,EAAqB,QAArB,EAAqB,EAArB;IACYA;MAAAA;MAAA;MAAA,OAASA,iCAAT;IAAmB,CAAnB;IAAuDA;IAASA;;;;;IAR/BA;IAAAA;;;;ADvBrD,OAAM,MAAOC,iBAAP,CAAwB;EAa5BC,YAAoBC,WAApB,EAAuDC,cAAvD,EAA+FC,MAA/F,EAAuHC,YAAvH,EAAiJ;IAA7H;IAAmC;IAAwC;IAAwB;IAPhH,gBAAW,IAAIT,SAAJ,CAAc;MAC9BU,IAAI,EAAE,IAAIT,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACS,QAAZ,CAApB,CADwB;MAE9BC,MAAM,EAAE,IAAIX,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACS,QAAZ,CAApB,CAFsB;MAG9BE,QAAQ,EAAE,IAAIZ,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACS,QAAZ,CAApB,CAHoB;MAI9BG,cAAc,EAAE,IAAIb,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACS,QAAZ,CAApB;IAJc,CAAd,CAAX;EAO+I;;EAEtJI,QAAQ;IACN,KAAKC,EAAL,GAAU,KAAKT,cAAL,CAAoBU,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,aAA1C,CAAV;IACA,KAAKC,KAAL;IACA,KAAKC,QAAL;EACD;;EAEW,IAARC,QAAQ;IACV,OAAO,KAAKC,QAAL,CAAcJ,GAAd,CAAkB,MAAlB,CAAP;EACD;;EACc,IAAXK,WAAW;IACb,OAAO,KAAKD,QAAL,CAAcJ,GAAd,CAAkB,UAAlB,CAAP;EACD;;EACiB,IAAdM,cAAc;IAChB,OAAO,KAAKF,QAAL,CAAcJ,GAAd,CAAkB,gBAAlB,CAAP;EACD;;EACa,IAAVO,UAAU;IACZ,KAAKC,UAAL;IACA,OAAO,KAAKJ,QAAL,CAAcJ,GAAd,CAAkB,QAAlB,CAAP;EAED;;EACDQ,UAAU;IACR,IAAI,KAAKC,IAAL,CAAUhB,MAAV,KAAqB,CAAzB,EAA4B;MAC1B,OAAO,KAAKiB,QAAL,GAAgB,OAAvB;IACD,CAFD,MAEO;MACL,OAAO,KAAKA,QAAL,GAAgB,QAAvB;IACD;EACF;;EAEDC,WAAW;IACT,KAAKR,QAAL,EAAeS,QAAf,CAAwB,KAAKH,IAAL,CAAUlB,IAAlC;IACA,KAAKc,WAAL,EAAkBO,QAAlB,CAA2B,KAAKH,IAAL,CAAUf,QAArC;IACA,KAAKY,cAAL,EAAqBM,QAArB,CAA8B,KAAKH,IAAL,CAAUd,cAAxC;IACA,KAAKY,UAAL,EAAiBK,QAAjB,CAA0B,KAAKF,QAA/B;EACD;;EAIDT,KAAK;IACH,KAAKd,WAAL,CAAiB0B,OAAjB,CAAyB,KAAKhB,EAA9B,EACGiB,SADH,CACaL,IAAI,IAAG;MAEhB,KAAKA,IAAL,GAAYA,IAAI,CAACM,IAAL,CAAU,CAAV,CAAZ;MACA,KAAKJ,WAAL;IAED,CANH;EAOD;;EAEKT,QAAQ;IAAA;;IAAA;MACZ,MAAMc,GAAG,SAAS,KAAI,CAAC1B,YAAL,CAAkB2B,QAAlB,EAAlB;MACA,KAAI,CAACC,KAAL,GAAaF,GAAG,CAACD,IAAjB;MACAI,OAAO,CAACC,GAAR,CAAY,KAAI,CAACF,KAAjB;IAHY;EAIb;;EAEDG,QAAQ;IACNF,OAAO,CAACC,GAAR,CAAY,KAAKhB,QAAjB;IACA,KAAKjB,WAAL,CAAiBmC,OAAjB,CAAyB,KAAKlB,QAAL,CAAcmB,KAAvC,EAA8C,KAAK1B,EAAnD;IACA,KAAKR,MAAL,CAAYmC,QAAZ,CAAqB,CAAC,MAAD,CAArB;EAED;;AAzE2B;;;mBAAjBvC,mBAAiBD;AAAA;;;QAAjBC;EAAiBwC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ9B7C,+BAA4B,CAA5B,EAA4B,aAA5B,EAA4B,CAA5B,EAA4B,CAA5B,EAA4B,MAA5B;MAEeA;MAAUA;MAIrBA;MAA6BA;QAAA,OAAU8C,cAAV;MAAoB,CAApB;MACzB9C;MAuCJA;;;;MAxCMA;MAAAA;MACSA;MAAAA","names":["FormGroup","FormControl","Validators","i0","UserEditComponent","constructor","userService","activatedRoute","router","rolesService","name","required","roleId","lastName","secondLastName","ngOnInit","id","snapshot","paramMap","get","users","addRoles","nameUser","dataEdit","lasNameUser","secondNameUser","roleIdUser","stringRole","user","userRole","preLoadData","setValue","getUser","subscribe","data","res","getRoles","roles","console","log","editData","putUser","value","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\brmorales.STFMXC1451\\Documents\\Angular- course\\tema3\\libreria\\src\\app\\private\\users\\user-edit\\user-edit.component.ts","C:\\Users\\brmorales.STFMXC1451\\Documents\\Angular- course\\tema3\\libreria\\src\\app\\private\\users\\user-edit\\user-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UsersService } from 'src/app/services/users/users.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RolesService } from 'src/app/services/roles/roles.service';\nimport { Roles } from 'src/app/Interfaces/roles';\n\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.scss']\n})\nexport class UserEditComponent implements OnInit {\n  public roles: Roles[] | undefined;\n  public id: any;\n  user: any;\n  public userRole: any;\n\n  public dataEdit = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    roleId: new FormControl('', [Validators.required]),\n    lastName: new FormControl('', [Validators.required]),\n    secondLastName: new FormControl('', [Validators.required])\n  })\n\n  constructor(private userService: UsersService, private activatedRoute: ActivatedRoute, private router: Router, private rolesService: RolesService) { }\n\n  ngOnInit(): void {\n    this.id = this.activatedRoute.snapshot.paramMap.get('idCharacter');\n    this.users()\n    this.addRoles()\n  }\n\n  get nameUser() {\n    return this.dataEdit.get('name')\n  }\n  get lasNameUser() {\n    return this.dataEdit.get('lastName')\n  }\n  get secondNameUser() {\n    return this.dataEdit.get('secondLastName')\n  }\n  get roleIdUser() {\n    this.stringRole()\n    return this.dataEdit.get('roleId')\n\n  }\n  stringRole() {\n    if (this.user.roleId === 1) {\n      return this.userRole = 'admin'\n    } else {\n      return this.userRole = 'viewer'\n    }\n  }\n\n  preLoadData() {\n    this.nameUser?.setValue(this.user.name)\n    this.lasNameUser?.setValue(this.user.lastName)\n    this.secondNameUser?.setValue(this.user.secondLastName)\n    this.roleIdUser?.setValue(this.userRole)\n  }\n\n\n\n  users() {\n    this.userService.getUser(this.id)\n      .subscribe(user => {\n\n        this.user = user.data[0]\n        this.preLoadData()\n\n      });\n  }\n\n  async addRoles() {\n    const res = await this.rolesService.getRoles()\n    this.roles = res.data\n    console.log(this.roles)\n  }\n\n  editData() {\n    console.log(this.dataEdit)\n    this.userService.putUser(this.dataEdit.value, this.id)\n    this.router.navigate(['/app'])\n\n  }\n\n\n}\n","\n<div class=\"container mt-3\">\n    <mat-toolbar  style=\"background-color: #4cff75;\">\n        <span> Edit User </span> \n       \n      </mat-toolbar>\n    \n    <form [formGroup]=\"dataEdit\" (submit)=\"editData()\">\n        <mat-card *ngIf=\"user\"class=\"text-center mt-3\" fxLayoutAlign=\"center center\"> \n           \n         <div>\n            <mat-form-field  appearance=\"fill\">    \n              <mat-label>Name</mat-label>\n                <input matInput  formControlName=\"name\"   type=\"name\" >\n               \n            </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field  appearance=\"fill\">\n                <mat-label>Second Name</mat-label>\n                <input matInput  type=\"secondLastName\" formControlName=\"secondLastName\" placeholder=\"Second Name\">\n              \n              </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field  appearance=\"fill\">\n                <mat-label>Last Name</mat-label>\n                <input matInput  type=\"lastName\" formControlName=\"lastName\" placeholder=\"Last Name\">\n              \n              </mat-form-field>\n        </div>\n        \n            <div>\n              <mat-form-field appearance=\"fill\">\n                     \n                      <mat-select  formControlName=\"roleId\">\n                        <mat-option *ngFor=\"let role of roles\" [value]=\"role.id\">\n                          {{role.name}}\n                        </mat-option>\n                      </mat-select>\n                    </mat-form-field> \n              </div> \n\n        <div class=\"mx-auto\">\n            <button (click)=\"editData()\" mat-raised-button color=\"primary\">Edit User</button>\n        </div>\n    </mat-card>\n    </form>\n    \n    \n</div>\n"]},"metadata":{},"sourceType":"module"}