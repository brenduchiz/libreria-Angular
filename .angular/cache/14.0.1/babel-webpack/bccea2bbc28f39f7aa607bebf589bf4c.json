{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/brmorales.STFMXC1451/Documents/Angular- course/tema3/libreria/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/users/users.service\";\nimport * as i2 from \"src/app/services/roles/roles.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/toolbar\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\n\nfunction UserAddComponent_mat_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const role_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r1.name, \" \");\n  }\n}\n\nexport class UserAddComponent {\n  constructor(userServives, rolesServices) {\n    this.userServives = userServives;\n    this.rolesServices = rolesServices;\n    this.addForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      secondName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n      roleId: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnInit() {\n    this.addRoles();\n  }\n\n  addUser() {\n    if (!this.addForm.value) return;\n    /*  this.userServives.postRegister(this.addForm.value) */\n\n    console.log(this.addForm.value);\n  }\n\n  addRoles() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield _this.rolesServices.getRoles();\n      _this.roles = res.data;\n      console.log(_this.roles);\n    })();\n  }\n\n}\n\nUserAddComponent.ɵfac = function UserAddComponent_Factory(t) {\n  return new (t || UserAddComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.RolesService));\n};\n\nUserAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserAddComponent,\n  selectors: [[\"app-user-add\"]],\n  decls: 40,\n  vars: 2,\n  consts: [[1, \"container\", \"mt-3\"], [2, \"background-color\", \"#4cff75\"], [3, \"formGroup\", \"submit\"], [\"fxLayoutAlign\", \"center center\", 1, \"text-center\", \"mt-3\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"Name\", \"type\", \"name\"], [\"matInput\", \"\", \"type\", \"secondName\", \"formControlName\", \"secondName\", \"placeholder\", \"Second Name\"], [\"matInput\", \"\", \"type\", \"lastName\", \"formControlName\", \"lastName\", \"placeholder\", \"Last Name\"], [\"formControlName\", \"rolesUser\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"email\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"password\"], [1, \"mx-auto\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"], [3, \"value\"]],\n  template: function UserAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-toolbar\", 1)(2, \"span\");\n      i0.ɵɵtext(3, \" Add New User \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"submit\", function UserAddComponent_Template_form_submit_4_listener() {\n        return ctx.addUser();\n      });\n      i0.ɵɵelementStart(5, \"mat-card\", 3)(6, \"div\")(7, \"mat-form-field\", 4)(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\")(12, \"mat-form-field\", 4)(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Second Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\")(17, \"mat-form-field\", 4)(18, \"mat-label\");\n      i0.ɵɵtext(19, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\")(22, \"mat-form-field\", 4)(23, \"mat-label\");\n      i0.ɵɵtext(24, \"Roles\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"mat-select\", 8);\n      i0.ɵɵtemplate(26, UserAddComponent_mat_option_26_Template, 2, 2, \"mat-option\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"div\")(28, \"mat-form-field\", 4)(29, \"mat-label\");\n      i0.ɵɵtext(30, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\")(33, \"mat-form-field\", 4)(34, \"mat-label\");\n      i0.ɵɵtext(35, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 12)(38, \"button\", 13);\n      i0.ɵɵtext(39, \"Add User\");\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.addForm);\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatToolbar, i7.MatCard, i8.MatButton, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.FormGroupDirective, i9.FormControlName, i10.MatSelect, i11.MatOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWFkZC5jb21wb25lbnQuc2NzcyJ9 */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,gBAAnD;;;;;;;;;;;;;;;;ICkCkBC;IACEA;IACFA;;;;;IAFuCA;IACrCA;IAAAA;;;;AD1BpB,OAAM,MAAOC,gBAAP,CAAuB;EAW3BC,YAAoBC,YAApB,EAAwDC,aAAxD,EAAmF;IAA/D;IAAoC;IARjD,eAAU,IAAIN,SAAJ,CAAc;MAC7BO,IAAI,EAAE,IAAIR,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACO,QAAZ,CAApB,CADuB;MAE7BC,UAAU,EAAE,IAAIV,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACO,QAAZ,CAApB,CAFiB;MAG7BE,QAAQ,EAAE,IAAIX,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACO,QAAZ,CAApB,CAHmB;MAI7BG,KAAK,EAAE,IAAIZ,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACO,QAAZ,EAAsBP,UAAU,CAACU,KAAjC,CAApB,CAJsB;MAK7BC,QAAQ,EAAE,IAAIb,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACO,QAAZ,CAApB,CALmB;MAM7BK,MAAM,EAAE,IAAId,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACO,QAAZ,CAApB;IANqB,CAAd,CAAV;EAQiF;;EAExFM,QAAQ;IACN,KAAKC,QAAL;EACD;;EAEDC,OAAO;IACL,IAAI,CAAC,KAAKC,OAAL,CAAaC,KAAlB,EAAyB;IACzB;;IACAC,OAAO,CAACC,GAAR,CAAY,KAAKH,OAAL,CAAaC,KAAzB;EACD;;EAEKH,QAAQ;IAAA;;IAAA;MACZ,MAAMM,GAAG,SAAS,KAAI,CAACf,aAAL,CAAmBgB,QAAnB,EAAlB;MACA,KAAI,CAACC,KAAL,GAAaF,GAAG,CAACG,IAAjB;MACAL,OAAO,CAACC,GAAR,CAAY,KAAI,CAACG,KAAjB;IAHY;EAIb;;AA3B0B;;;mBAAhBpB,kBAAgBD;AAAA;;;QAAhBC;EAAgBsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT7B3B,+BAA4B,CAA5B,EAA4B,aAA5B,EAA4B,CAA5B,EAA4B,CAA5B,EAA4B,MAA5B;MAEeA;MAAaA;MAIxBA;MAA4BA;QAAA,OAAU4B,aAAV;MAAmB,CAAnB;MACxB5B,oCAAiE,CAAjE,EAAiE,KAAjE,EAAiE,CAAjE,EAAiE,gBAAjE,EAAiE,CAAjE,EAAiE,CAAjE,EAAiE,WAAjE;MAImBA;MAAIA;MACfA;MAEJA;MAEJA,6BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,WAAL;MAEmBA;MAAWA;MACtBA;MAEFA;MAENA,6BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,WAAL;MAEmBA;MAASA;MACpBA;MAEFA;MAENA,6BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,WAAL;MAEmBA;MAAKA;MAChBA;MACEA;MAGFA;MAGRA,6BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,WAAL;MAEmBA;MAAKA;MAChBA;MAEFA;MAENA,6BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,WAAL;MAEmBA;MAAQA;MACnBA;MAEFA;MAENA,iCAAqB,EAArB,EAAqB,QAArB,EAAqB,EAArB;MAC8CA;MAAQA;;;;MAjDpDA;MAAAA;MA4BqCA;MAAAA","names":["FormControl","FormGroup","Validators","i0","UserAddComponent","constructor","userServives","rolesServices","name","required","secondName","lastName","email","password","roleId","ngOnInit","addRoles","addUser","addForm","value","console","log","res","getRoles","roles","data","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\brmorales.STFMXC1451\\Documents\\Angular- course\\tema3\\libreria\\src\\app\\private\\users\\user-add\\user-add.component.ts","C:\\Users\\brmorales.STFMXC1451\\Documents\\Angular- course\\tema3\\libreria\\src\\app\\private\\users\\user-add\\user-add.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Roles } from 'src/app/Interfaces/roles';\nimport { RolesService } from 'src/app/services/roles/roles.service';\nimport { UsersService } from 'src/app/services/users/users.service';\n@Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n  styleUrls: ['./user-add.component.scss']\n})\nexport class UserAddComponent implements OnInit {\n  public roles: Roles[] | undefined;\n\n  public addForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    secondName: new FormControl('', [Validators.required]),\n    lastName: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n    roleId: new FormControl('', [Validators.required])\n  })\n  constructor(private userServives: UsersService, private rolesServices: RolesService) { }\n\n  ngOnInit(): void {\n    this.addRoles()\n  }\n\n  addUser() {\n    if (!this.addForm.value) return;\n    /*  this.userServives.postRegister(this.addForm.value) */\n    console.log(this.addForm.value)\n  }\n\n  async addRoles() {\n    const res = await this.rolesServices.getRoles()\n    this.roles = res.data\n    console.log(this.roles)\n  }\n}\n","\n<div class=\"container mt-3\">\n    <mat-toolbar  style=\"background-color: #4cff75;\">\n        <span> Add New User </span> \n       \n      </mat-toolbar>\n    \n    <form [formGroup]=\"addForm\" (submit)=\"addUser()\">\n        <mat-card class=\"text-center mt-3\" fxLayoutAlign=\"center center\"> \n           \n        <div>\n            <mat-form-field  appearance=\"fill\">    \n                <mat-label>Name</mat-label>\n                <input matInput  formControlName=\"name\" placeholder=\"Name\" type=\"name\" >\n               \n            </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field  appearance=\"fill\">\n                <mat-label>Second Name</mat-label>\n                <input matInput  type=\"secondName\" formControlName=\"secondName\" placeholder=\"Second Name\">\n              \n              </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field  appearance=\"fill\">\n                <mat-label>Last Name</mat-label>\n                <input matInput  type=\"lastName\" formControlName=\"lastName\" placeholder=\"Last Name\">\n              \n              </mat-form-field>\n        </div>\n        <div>\n        <mat-form-field appearance=\"fill\">\n                <mat-label>Roles</mat-label>\n                <mat-select  formControlName=\"rolesUser\">\n                  <mat-option *ngFor=\"let role of roles\" [value]=\"role.id\">\n                    {{role.name}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field> \n        </div> \n        <div>\n            <mat-form-field  appearance=\"fill\">\n                <mat-label>Email</mat-label>\n                <input matInput  type=\"email\" formControlName=\"email\" placeholder=\"email\">\n              \n              </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field  appearance=\"fill\">\n                <mat-label>Password</mat-label>\n                <input matInput  type=\"password\" formControlName=\"password\" placeholder=\"password\">\n              \n              </mat-form-field>\n        </div>\n        <div class=\"mx-auto\">\n            <button mat-raised-button color=\"primary\">Add User</button>\n        </div>\n    </mat-card>\n    </form>\n    \n    \n</div>\n"]},"metadata":{},"sourceType":"module"}