{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/brmorales.STFMXC1451/Documents/Angular- course/tema3/libreria/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/users/users.service\";\nimport * as i2 from \"src/app/services/roles/roles.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/toolbar\";\nimport * as i9 from \"@angular/material/card\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\n\nfunction UserAddComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" No es un nombre v\\u00E1lido \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserAddComponent_mat_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const role_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r5.name, \" \");\n  }\n}\n\nfunction UserAddComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" No es un correo v\\u00E1lido \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserAddComponent_mat_error_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserAddComponent_mat_error_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" La contrase\\u00F1a no es valida \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class UserAddComponent {\n  constructor(userServives, rolesServices, router, snackBar) {\n    this.userServives = userServives;\n    this.rolesServices = rolesServices;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.addForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      secondLastName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      roleId: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnInit() {\n    this.addRoles();\n    console.log(this.addForm.controls);\n  }\n\n  addUser() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.addForm.value) return;\n      const res = yield _this.userServives.postRegister(_this.addForm.value);\n      console.log(res);\n\n      _this.snackBar.open(res.message, '', {\n        duration: 3000,\n        panelClass: ['green-snack-bar'],\n        verticalPosition: 'top'\n      });\n\n      _this.router.navigate(['/app']);\n    })();\n  }\n\n  addRoles() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield _this2.rolesServices.getRoles();\n      _this2.roles = res.data;\n    })();\n  }\n\n}\n\nUserAddComponent.ɵfac = function UserAddComponent_Factory(t) {\n  return new (t || UserAddComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.RolesService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n};\n\nUserAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserAddComponent,\n  selectors: [[\"app-user-add\"]],\n  decls: 44,\n  vars: 6,\n  consts: [[1, \"container\", \"mt-3\"], [2, \"background-color\", \"#4cff75\"], [3, \"formGroup\", \"submit\"], [\"fxLayoutAlign\", \"center center\", 1, \"text-center\", \"mt-3\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"Name\", \"type\", \"name\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"secondLastName\", \"formControlName\", \"secondLastName\", \"placeholder\", \"Second Name\"], [\"matInput\", \"\", \"type\", \"lastName\", \"formControlName\", \"lastName\", \"placeholder\", \"Last Name\"], [\"formControlName\", \"roleId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"email\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"password\"], [1, \"mx-auto\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"], [3, \"value\"]],\n  template: function UserAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-toolbar\", 1)(2, \"span\");\n      i0.ɵɵtext(3, \" Add New User \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"submit\", function UserAddComponent_Template_form_submit_4_listener() {\n        return ctx.addUser();\n      });\n      i0.ɵɵelementStart(5, \"mat-card\", 3)(6, \"div\")(7, \"mat-form-field\", 4)(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵtemplate(11, UserAddComponent_mat_error_11_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\")(13, \"mat-form-field\", 4)(14, \"mat-label\");\n      i0.ɵɵtext(15, \"Second Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\")(18, \"mat-form-field\", 4)(19, \"mat-label\");\n      i0.ɵɵtext(20, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\")(23, \"mat-form-field\", 4)(24, \"mat-label\");\n      i0.ɵɵtext(25, \"Roles\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"mat-select\", 9);\n      i0.ɵɵtemplate(27, UserAddComponent_mat_option_27_Template, 2, 2, \"mat-option\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"div\")(29, \"mat-form-field\", 4)(30, \"mat-label\");\n      i0.ɵɵtext(31, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 11);\n      i0.ɵɵtemplate(33, UserAddComponent_mat_error_33_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(34, UserAddComponent_mat_error_34_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"div\")(36, \"mat-form-field\", 4)(37, \"mat-label\");\n      i0.ɵɵtext(38, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 12);\n      i0.ɵɵtemplate(40, UserAddComponent_mat_error_40_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"div\", 13)(42, \"button\", 14);\n      i0.ɵɵtext(43, \"Add User\");\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.addForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.addForm.controls.name.errors == null ? null : ctx.addForm.controls.name.errors[\"required\"]);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.addForm.controls[\"email\"].hasError(\"email\") || false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.addForm.controls[\"email\"].hasError(\"required\") || false);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.addForm.controls[\"password\"].errors);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.MatError, i6.MatFormField, i6.MatLabel, i7.MatInput, i8.MatToolbar, i9.MatCard, i10.MatButton, i11.ɵNgNoValidate, i11.DefaultValueAccessor, i11.NgControlStatus, i11.NgControlStatusGroup, i11.FormGroupDirective, i11.FormControlName, i12.MatSelect, i13.MatOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWFkZC5jb21wb25lbnQuc2NzcyJ9 */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,gBAAnD;;;;;;;;;;;;;;;;;;ICagBC;IACEA;IACJA;;;;;;IAqBIA;IACEA;IACFA;;;;;IAFuCA;IACrCA;IAAAA;;;;;;IASJA;IACEA;IACJA;;;;;;IACAA;IACIA;IACJA;;;;;;IAOEA;IACEA;IACJA;;;;ADjDd,OAAM,MAAOC,gBAAP,CAAuB;EAW3BC,YAAoBC,YAApB,EAAwDC,aAAxD,EAA6FC,MAA7F,EAAqHC,QAArH,EAA0I;IAAtH;IAAoC;IAAqC;IAAwB;IAR9G,eAAU,IAAIR,SAAJ,CAAc;MAC7BS,IAAI,EAAE,IAAIV,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACS,QAAZ,CAApB,CADuB;MAE7BC,cAAc,EAAE,IAAIZ,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACS,QAAZ,CAApB,CAFa;MAG7BE,QAAQ,EAAE,IAAIb,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACS,QAAZ,CAApB,CAHmB;MAI7BG,KAAK,EAAE,IAAId,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACS,QAAZ,EAAsBT,UAAU,CAACY,KAAjC,CAApB,CAJsB;MAK7BC,QAAQ,EAAE,IAAIf,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACS,QAAZ,EAAsBT,UAAU,CAACc,SAAX,CAAqB,CAArB,CAAtB,CAApB,CALmB;MAM7BC,MAAM,EAAE,IAAIjB,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACS,QAAZ,CAApB;IANqB,CAAd,CAAV;EAQwI;;EAE/IO,QAAQ;IACN,KAAKC,QAAL;IACAC,OAAO,CAACC,GAAR,CAAY,KAAKC,OAAL,CAAaC,QAAzB;EACD;;EAEKC,OAAO;IAAA;;IAAA;MACX,IAAI,CAAC,KAAI,CAACF,OAAL,CAAaG,KAAlB,EAAyB;MACzB,MAAMC,GAAG,SAAS,KAAI,CAACpB,YAAL,CAAkBqB,YAAlB,CAA+B,KAAI,CAACL,OAAL,CAAaG,KAA5C,CAAlB;MACAL,OAAO,CAACC,GAAR,CAAYK,GAAZ;;MACA,KAAI,CAACjB,QAAL,CAAcmB,IAAd,CAAmBF,GAAG,CAACG,OAAvB,EAAgC,EAAhC,EAAoC;QAElCC,QAAQ,EAAE,IAFwB;QAGlCC,UAAU,EAAE,CAAC,iBAAD,CAHsB;QAIlCC,gBAAgB,EAAE;MAJgB,CAApC;;MAOA,KAAI,CAACxB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,MAAD,CAArB;IAXW;EAaZ;;EAEKd,QAAQ;IAAA;;IAAA;MACZ,MAAMO,GAAG,SAAS,MAAI,CAACnB,aAAL,CAAmB2B,QAAnB,EAAlB;MACA,MAAI,CAACC,KAAL,GAAaT,GAAG,CAACU,IAAjB;IAFY;EAGb;;AApC0B;;;mBAAhBhC,kBAAgBD;AAAA;;;QAAhBC;EAAgBiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX7BtC,+BAA4B,CAA5B,EAA4B,aAA5B,EAA4B,CAA5B,EAA4B,CAA5B,EAA4B,MAA5B;MAEeA;MAAaA;MAIxBA;MAA4BA;QAAA,OAAUuC,aAAV;MAAmB,CAAnB;MACxBvC,oCAAiE,CAAjE,EAAiE,KAAjE,EAAiE,CAAjE,EAAiE,gBAAjE,EAAiE,CAAjE,EAAiE,CAAjE,EAAiE,WAAjE;MAImBA;MAAIA;MACfA;MACAA;MAGJA;MAEJA,6BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,WAAL;MAEmBA;MAAWA;MACtBA;MAEFA;MAENA,6BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,WAAL;MAEmBA;MAASA;MACpBA;MAEFA;MAENA,6BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,WAAL;MAEmBA;MAAKA;MAChBA;MACEA;MAGFA;MAGRA,6BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,WAAL;MAEmBA;MAAKA;MAChBA;MACAA;MAGFA;MAGAA;MAENA,6BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,WAAL;MAEmBA;MAAQA;MACnBA;MACAA;MAGFA;MAENA,iCAAqB,EAArB,EAAqB,QAArB,EAAqB,EAArB;MAC8CA;MAAQA;;;;MA1DpDA;MAAAA;MAOkBA;MAAAA;MAuBmBA;MAAAA;MAUnBA;MAAAA;MAGFA;MAAAA;MASEA;MAAAA","names":["FormControl","FormGroup","Validators","i0","UserAddComponent","constructor","userServives","rolesServices","router","snackBar","name","required","secondLastName","lastName","email","password","minLength","roleId","ngOnInit","addRoles","console","log","addForm","controls","addUser","value","res","postRegister","open","message","duration","panelClass","verticalPosition","navigate","getRoles","roles","data","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\brmorales.STFMXC1451\\Documents\\Angular- course\\tema3\\libreria\\src\\app\\private\\users\\user-add\\user-add.component.ts","C:\\Users\\brmorales.STFMXC1451\\Documents\\Angular- course\\tema3\\libreria\\src\\app\\private\\users\\user-add\\user-add.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Roles } from 'src/app/Interfaces/roles';\nimport { RolesService } from 'src/app/services/roles/roles.service';\nimport { UsersService } from 'src/app/services/users/users.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n  styleUrls: ['./user-add.component.scss']\n})\nexport class UserAddComponent implements OnInit {\n  public roles: Roles[] | undefined;\n\n  public addForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    secondLastName: new FormControl('', [Validators.required]),\n    lastName: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    roleId: new FormControl('', [Validators.required])\n  })\n  constructor(private userServives: UsersService, private rolesServices: RolesService, private router: Router, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.addRoles()\n    console.log(this.addForm.controls)\n  }\n\n  async addUser() {\n    if (!this.addForm.value) return;\n    const res = await this.userServives.postRegister(this.addForm.value)\n    console.log(res)\n    this.snackBar.open(res.message, '', {\n\n      duration: 3000,\n      panelClass: ['green-snack-bar'],\n      verticalPosition: 'top',\n\n    });\n    this.router.navigate(['/app'])\n\n  }\n\n  async addRoles() {\n    const res = await this.rolesServices.getRoles()\n    this.roles = res.data\n  }\n}\n","\n<div class=\"container mt-3\">\n    <mat-toolbar  style=\"background-color: #4cff75;\">\n        <span> Add New User </span> \n       \n      </mat-toolbar>\n    \n    <form [formGroup]=\"addForm\" (submit)=\"addUser()\">\n        <mat-card class=\"text-center mt-3\" fxLayoutAlign=\"center center\"> \n           \n        <div>\n            <mat-form-field  appearance=\"fill\">    \n                <mat-label>Name</mat-label>\n                <input matInput  formControlName=\"name\" placeholder=\"Name\" type=\"name\" >\n                <mat-error *ngIf=\"addForm.controls.name.errors?.['required'] \" >\n                  No es un nombre válido\n              </mat-error>\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field  appearance=\"fill\">\n                <mat-label>Second Name</mat-label>\n                <input matInput  type=\"secondLastName\" formControlName=\"secondLastName\" placeholder=\"Second Name\">\n              \n              </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field  appearance=\"fill\">\n                <mat-label>Last Name</mat-label>\n                <input matInput  type=\"lastName\" formControlName=\"lastName\" placeholder=\"Last Name\">\n              \n              </mat-form-field>\n        </div>\n        <div>\n        <mat-form-field appearance=\"fill\">\n                <mat-label>Roles</mat-label>\n                <mat-select  formControlName=\"roleId\">\n                  <mat-option *ngFor=\"let role of roles\" [value]=\"role.id\">\n                    {{role.name}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field> \n        </div> \n        <div>\n            <mat-form-field  appearance=\"fill\">\n                <mat-label>Email</mat-label>\n                <input matInput  type=\"email\" formControlName=\"email\" placeholder=\"email\">\n                <mat-error *ngIf=\"addForm.controls['email'].hasError('email') || false \" >\n                  No es un correo válido\n              </mat-error>\n              <mat-error *ngIf=\"addForm.controls['email'].hasError('required') || false \" >\n                  Email es requerido\n              </mat-error>\n              </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field  appearance=\"fill\">\n                <mat-label>Password</mat-label>\n                <input matInput  type=\"password\" formControlName=\"password\" placeholder=\"password\">\n                <mat-error *ngIf=\"addForm.controls['password'].errors\" >\n                  La contraseña no es valida\n              </mat-error>\n              </mat-form-field>\n        </div>\n        <div class=\"mx-auto\">\n            <button mat-raised-button color=\"primary\">Add User</button>\n        </div>\n    </mat-card>\n    </form>\n    \n    \n</div>\n"]},"metadata":{},"sourceType":"module"}