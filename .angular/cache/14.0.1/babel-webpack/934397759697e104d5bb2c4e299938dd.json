{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/brmorales.STFMXC1451/Documents/Angular- course/tema3/libreria/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/users/users.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/toolbar\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/forms\";\nexport class UserPasswordComponent {\n  constructor(userService, activatedRoute, router, snackBar) {\n    this.userService = userService;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.dataPassword = new FormGroup({\n      newPassword: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnInit() {\n    this.id = this.activatedRoute.snapshot.paramMap.get('idCharacter');\n  }\n\n  changePassword() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const idUser = {\n        id: _this.id\n      };\n      const data = Object.assign(_this.dataPassword.value, idUser);\n      const res = yield _this.userService.postPassword(data);\n\n      _this.router.navigate(['/app']);\n\n      _this.snackBar.open(res.message, '', {\n        duration: 3000,\n        panelClass: ['green-snack-bar'],\n        verticalPosition: 'top'\n      });\n    })();\n  }\n\n}\n\nUserPasswordComponent.ɵfac = function UserPasswordComponent_Factory(t) {\n  return new (t || UserPasswordComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n};\n\nUserPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserPasswordComponent,\n  selectors: [[\"app-user-password\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-3\"], [2, \"background-color\", \"#4cff75\"], [3, \"formGroup\", \"submit\"], [\"fxLayoutAlign\", \"center center\", 1, \"text-center\", \"mt-3\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"newPassword\", \"placeholder\", \"newPassword\", \"type\", \"password\"], [1, \"mx-auto\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"]],\n  template: function UserPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-toolbar\", 1)(2, \"span\");\n      i0.ɵɵtext(3, \" Change your password \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"submit\", function UserPasswordComponent_Template_form_submit_4_listener() {\n        return ctx.changePassword();\n      });\n      i0.ɵɵelementStart(5, \"mat-card\", 3)(6, \"div\")(7, \"mat-form-field\", 4)(8, \"mat-label\");\n      i0.ɵɵtext(9, \"New password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"button\", 7);\n      i0.ɵɵtext(13, \"Enter\");\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.dataPassword);\n    }\n  },\n  dependencies: [i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatToolbar, i7.MatCard, i8.MatButton, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.FormGroupDirective, i9.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,QAAmD,gBAAnD;;;;;;;;;;;AAUA,OAAM,MAAOC,qBAAP,CAA4B;EAOhCC,YAAoBC,WAApB,EAAuDC,cAAvD,EAA+FC,MAA/F,EAAuHC,QAAvH,EAA4I;IAAxH;IAAmC;IAAwC;IAAwB;IAJhH,oBAAe,IAAIR,SAAJ,CAAc;MAClCS,WAAW,EAAE,IAAIR,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACQ,QAAZ,CAApB;IADqB,CAAd,CAAf;EAI0I;;EAEjJC,QAAQ;IACN,KAAKC,EAAL,GAAU,KAAKN,cAAL,CAAoBO,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,aAA1C,CAAV;EAED;;EACKC,cAAc;IAAA;;IAAA;MAElB,MAAMC,MAAM,GAAG;QAAEL,EAAE,EAAE,KAAI,CAACA;MAAX,CAAf;MACA,MAAMM,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAI,CAACC,YAAL,CAAkBC,KAAhC,EAAuCL,MAAvC,CAAb;MACA,MAAMM,GAAG,SAAS,KAAI,CAAClB,WAAL,CAAiBmB,YAAjB,CAA8BN,IAA9B,CAAlB;;MACA,KAAI,CAACX,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,MAAD,CAArB;;MACA,KAAI,CAACjB,QAAL,CAAckB,IAAd,CAAmBH,GAAG,CAACI,OAAvB,EAAgC,EAAhC,EAAoC;QAElCC,QAAQ,EAAE,IAFwB;QAGlCC,UAAU,EAAE,CAAC,iBAAD,CAHsB;QAIlCC,gBAAgB,EAAE;MAJgB,CAApC;IANkB;EAanB;;AA1B+B;;;mBAArB3B,uBAAqB4B;AAAA;;;QAArB5B;EAAqB6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVlCL,+BAA4B,CAA5B,EAA4B,aAA5B,EAA4B,CAA5B,EAA4B,CAA5B,EAA4B,MAA5B;MAEeA;MAAqBA;MAIhCA;MAAiCA;QAAA,OAAUM,oBAAV;MAA0B,CAA1B;MAC7BN,oCAAiE,CAAjE,EAAiE,KAAjE,EAAiE,CAAjE,EAAiE,gBAAjE,EAAiE,CAAjE,EAAiE,CAAjE,EAAiE,WAAjE;MAImBA;MAAYA;MACvBA;MAEJA;MAGJA,gCAAqB,EAArB,EAAqB,QAArB,EAAqB,CAArB;MAC8CA;MAAKA;;;;MAZjDA;MAAAA","names":["FormGroup","FormControl","Validators","UserPasswordComponent","constructor","userService","activatedRoute","router","snackBar","newPassword","required","ngOnInit","id","snapshot","paramMap","get","changePassword","idUser","data","Object","assign","dataPassword","value","res","postPassword","navigate","open","message","duration","panelClass","verticalPosition","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\brmorales.STFMXC1451\\Documents\\Angular- course\\tema3\\libreria\\src\\app\\private\\users\\user-password\\user-password.component.ts","C:\\Users\\brmorales.STFMXC1451\\Documents\\Angular- course\\tema3\\libreria\\src\\app\\private\\users\\user-password\\user-password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UsersService } from 'src/app/services/users/users.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-password',\n  templateUrl: './user-password.component.html',\n  styleUrls: ['./user-password.component.scss']\n})\nexport class UserPasswordComponent implements OnInit {\n  public id: any;\n\n  public dataPassword = new FormGroup({\n    newPassword: new FormControl('', [Validators.required]),\n\n  })\n  constructor(private userService: UsersService, private activatedRoute: ActivatedRoute, private router: Router, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.id = this.activatedRoute.snapshot.paramMap.get('idCharacter');\n\n  }\n  async changePassword() {\n\n    const idUser = { id: this.id };\n    const data = Object.assign(this.dataPassword.value, idUser);\n    const res = await this.userService.postPassword(data)\n    this.router.navigate(['/app'])\n    this.snackBar.open(res.message, '', {\n\n      duration: 3000,\n      panelClass: ['green-snack-bar'],\n      verticalPosition: 'top',\n\n    });\n  }\n}\n","\n<div class=\"container mt-3\">\n    <mat-toolbar  style=\"background-color: #4cff75;\">\n        <span> Change your password </span> \n       \n      </mat-toolbar>\n    \n    <form [formGroup]=\"dataPassword\" (submit)=\"changePassword()\">\n        <mat-card class=\"text-center mt-3\" fxLayoutAlign=\"center center\"> \n           \n        <div>\n            <mat-form-field  appearance=\"fill\">    \n                <mat-label>New password</mat-label>\n                <input matInput  formControlName=\"newPassword\" placeholder=\"newPassword\" type=\"password\" >\n               \n            </mat-form-field>\n        </div>\n        \n        <div class=\"mx-auto\">\n            <button mat-raised-button color=\"primary\">Enter</button>\n        </div>\n    </mat-card>\n    </form>\n    \n    \n</div>\n\n"]},"metadata":{},"sourceType":"module"}