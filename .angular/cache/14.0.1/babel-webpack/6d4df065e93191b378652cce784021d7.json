{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/brmorales.STFMXC1451/Documents/Angular- course/tema3/libreria/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet UserEditComponent = class UserEditComponent {\n  constructor(userService, activatedRoute, router, rolesService) {\n    this.userService = userService;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.rolesService = rolesService;\n    this.dataEdit = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      roleId: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      secondLastName: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnInit() {\n    this.id = this.activatedRoute.snapshot.paramMap.get('idCharacter');\n    this.users();\n    this.addRoles();\n  }\n\n  get nameUser() {\n    return this.dataEdit.get('name');\n  }\n\n  get lasNameUser() {\n    return this.dataEdit.get('lastName');\n  }\n\n  get secondNameUser() {\n    return this.dataEdit.get('secondLastName');\n  }\n\n  get roleIdUser() {\n    this.stringRole();\n    return this.dataEdit.get('roleId');\n  }\n\n  stringRole() {\n    if (this.user.roleId === 1) {\n      return this.userRole = 'admin';\n    } else {\n      return this.userRole = 'viewer';\n    }\n  }\n\n  preLoadData() {\n    this.nameUser?.setValue(this.user.name);\n    this.lasNameUser?.setValue(this.user.lastName);\n    this.secondNameUser?.setValue(this.user.secondLastName);\n    this.roleIdUser?.setValue(this.userRole);\n  }\n\n  users() {\n    this.userService.getUser(this.id).subscribe(user => {\n      this.user = user.data[0];\n      this.preLoadData();\n    });\n  }\n\n  addRoles() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield _this.rolesService.getRoles();\n      _this.roles = res.data;\n      console.log(_this.roles);\n    })();\n  }\n\n  editData() {\n    console.log(this.dataEdit);\n    this.userService.putUser(this.dataEdit.value, this.id);\n    this.router.navigate(['/app']);\n  }\n\n};\nUserEditComponent = __decorate([Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.scss']\n})], UserEditComponent);\nexport { UserEditComponent };","map":{"version":3,"mappings":"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","names":["Component","FormGroup","FormControl","Validators","UserEditComponent","constructor","userService","activatedRoute","router","rolesService","name","required","roleId","lastName","secondLastName","ngOnInit","id","snapshot","paramMap","get","users","addRoles","nameUser","dataEdit","lasNameUser","secondNameUser","roleIdUser","stringRole","user","userRole","preLoadData","setValue","getUser","subscribe","data","res","getRoles","roles","console","log","editData","putUser","value","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\brmorales.STFMXC1451\\Documents\\Angular- course\\tema3\\libreria\\src\\app\\private\\users\\user-edit\\user-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UsersService } from 'src/app/services/users/users.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RolesService } from 'src/app/services/roles/roles.service';\nimport { Roles } from 'src/app/Interfaces/roles';\n\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.scss']\n})\nexport class UserEditComponent implements OnInit {\n  public roles: Roles[] | undefined;\n  public id: any;\n  user: any;\n  public userRole: any;\n\n  public dataEdit = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    roleId: new FormControl('', [Validators.required]),\n    lastName: new FormControl('', [Validators.required]),\n    secondLastName: new FormControl('', [Validators.required])\n  })\n\n  constructor(private userService: UsersService, private activatedRoute: ActivatedRoute, private router: Router, private rolesService: RolesService) { }\n\n  ngOnInit(): void {\n    this.id = this.activatedRoute.snapshot.paramMap.get('idCharacter');\n    this.users()\n    this.addRoles()\n  }\n\n  get nameUser() {\n    return this.dataEdit.get('name')\n  }\n  get lasNameUser() {\n    return this.dataEdit.get('lastName')\n  }\n  get secondNameUser() {\n    return this.dataEdit.get('secondLastName')\n  }\n  get roleIdUser() {\n    this.stringRole()\n    return this.dataEdit.get('roleId')\n\n  }\n  stringRole() {\n    if (this.user.roleId === 1) {\n      return this.userRole = 'admin'\n    } else {\n      return this.userRole = 'viewer'\n    }\n  }\n\n  preLoadData() {\n    this.nameUser?.setValue(this.user.name)\n    this.lasNameUser?.setValue(this.user.lastName)\n    this.secondNameUser?.setValue(this.user.secondLastName)\n    this.roleIdUser?.setValue(this.userRole)\n  }\n\n\n\n  users() {\n    this.userService.getUser(this.id)\n      .subscribe(user => {\n\n        this.user = user.data[0]\n        this.preLoadData()\n\n      });\n  }\n\n  async addRoles() {\n    const res = await this.rolesService.getRoles()\n    this.roles = res.data\n    console.log(this.roles)\n  }\n\n  editData() {\n    console.log(this.dataEdit)\n    this.userService.putUser(this.dataEdit.value, this.id)\n    this.router.navigate(['/app'])\n\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}